openapi: '3.0.3'

info:
  description: yt-comments-reborn Backend
  version: 0.1.0
  title: yt-comments-reborn Backend

servers:
  - url: http://localhost:3010/v0

paths:
  /login:
    post:
      description: Login
      requestBody:
        description: Credentials
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Credentials'
      responses:
        200:
          description: Auth User Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthUser'
        401:
          description: Unauthorized
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /user:
    get:
      description: User Endpoint
      responses:
        200:
          description: User Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /comment:
    get:
      description: Comment Endpoint
      parameters:
        - in: query
          name: vid_id
          schema:
            $ref: '#/components/schemas/VideoId'
          required: true
      responses:
        200:
          description: Comment Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      security:
        - bearerAuth: []
      description: Comment Endpoint
      requestBody:
        description: Request Body
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentInfo'
      responses:
        200:
          description: Comment Response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /reply:
    get:
      description: Reply Endpoint
      parameters:
        - in: query
          name: comment_id
          schema:
            $ref: '#/components/schemas/CommentId'
          required: true
      responses:
        200:
          description: Reply Response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
        default:
          description: Unexpected Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    Error:
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
      required:
        - code
        - message
      additionalProperties: false

    User:
      type: object
      properties:
        user_id:
          type: string
          format: uuid
        name:
          type: string
          minLength: 1
          maxLength: 64
        email:
          type: string
          format: email
        picture:
          type: string
          format: uri
      required:
        - user_id
        - name
        - email
        - picture
      additionalProperties: false

    CommentInfo:
      type: object
      properties:
        reply_id:
          type: string
          nullable: true
          format: uuid
        comment:
          type: string
          minLength: 1
          maxLength: 8192
        vid_id:
          $ref: '#/components/schemas/VideoId'
      additionalProperties: false

    Comment:
      type: object
      properties:
        comment_id:
          $ref: '#/components/schemas/CommentId'
        reply_id:
          type: string
          nullable: true
          format: uuid
        user_id:
          type: string
          format: uuid
        comment:
          type: string
          minLength: 1
          maxLength: 8192
        postdate:
          type: string
          format: date-time
        vid_id:
          $ref: '#/components/schemas/VideoId'
        name:
          type: string
      additionalProperties: false

    VideoId:
      type: string
      minLength: 11
      maxLength: 11

    CommentId:
      type: string
      format: uuid

    Credentials:
      type: object
      properties:
        token:
          type: string
      additionalProperties: false

    AuthUser:
      type: object
      properties:
        access_token:
          type: string
      additionalProperties: false

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
